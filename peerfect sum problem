class Solution{

	public:
	int m = 1e9 + 7;
	//  test-case::0 0 33
/*	int f(int arr[], int idx, int k, vector<vector<int>>& dp){
	    
	  if(idx==0){

            if(k==0 && arr[0]==0) return 2;
            if(arr[0]==k || k==0) return 1;
            return 0;
	  }  
	  if(dp[idx][k] != -1)return dp[idx][k]%m;  
	    
	    int non_pick = f(arr, idx-1, k,dp)%m;
	    int pick = 0;
	    if(k >= arr[idx])pick = f(arr, idx-1, k- arr[idx], dp) %m;
	    return dp[idx][k] = (pick + non_pick)%m;
	}
*/	//TABULATION
	int perfectSum(int arr[], int n, int sum)
	{
	    int k = sum;
	    vector<vector<int>>dp(n, vector<int>(k+1, 0));
        //return f(arr, n-1, k, dp)%m;
        for(int i=0; i<n; i++){
            dp[i][0] = 1;
        }
          if(arr[0]==0)dp[0][0]=2;
          else dp[0][0]=1;
          
          if(arr[0]!=0&&arr[0]<=sum){
              dp[0][arr[0]]=1;
          }

        for(int i= 1; i<n; i++){
            for(int j=0; j<=k; j++){
  
      	    int non_pick = dp[i-1][j]%m;
	         int pick = 0;
	       if(j >= arr[i])pick = dp[i-1] [j- arr[i]] %m;
	         dp[i][j] = (pick + non_pick)%m;
            }
        }      
       return dp[n-1][k]%m;
	}
	  
