
class Solution{
public:
int m = 1003;
int f(int i, int j, int isCheck, string s, vector<vector<vector<int>>>&dp){
    
if(i>j)return 0;    
if(i==j){
    if(isCheck == 1)return (s[i]=='T');
    else if(isCheck == 0)return s[i] == 'F';
}    
    
if(dp[i][j][isCheck] != -1)return dp[i][j][isCheck];    

int ways = 0;

for(int ind = i+1; ind<= j-1; ind=ind+2){
    int lt = f(i, ind-1, 1, s, dp);
    int lf = f(i, ind - 1, 0, s, dp);
    
    int rt = f(ind+1, j, 1, s, dp);
    int rf = f(ind+1, j, 0, s,dp);
    
if(s[ind]=='&'){
    // and mei true*false------> false, true* true---------->true;
  if(isCheck )ways = (ways + (lt* rt)%m)% m;
  else ways = (ways + (lt*rf)%m + (lf*rt)%m  + (lf*rf)%m)%m;    
}    

else if(s[ind] == '|'){
    // or mei true* false------->true, false* false------>false;
    if(isCheck ==1)ways = (ways + (lt*rf)%m + (rt*lf)%m  + (lt*rt)%m)%m; 
    else ways = (ways + (lf*rf)%m)%m;
}

else if(s[ind] == '^'){
    
    if(isCheck == 1)ways = (ways + (lt*rf)%m + (rt*lf)%m)%m;
    else ways = (ways +(rt*lt)%m + (rf*lf)%m)%m;
}
}    
    return dp[i][j][isCheck] = ways % 1003;
}

int countWays(int n, string s){
    
vector<vector<vector<int>>>dp(n, vector<vector<int>>(n, vector<int>(2, -1)));        
return f(0, n-1,1, s, dp);        
    }
};
