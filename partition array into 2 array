  int minimumDifference(vector<int>& nums) {
        int totalsum = 0;
        int n = nums.size();
        for(int i=0; i<nums.size(); i++){
            totalsum = totalsum + nums[i];
        }
        int k = totalsum;
        vector<vector<bool>>dp(n, vector<bool>(k+1,0 ));
        //target== 0 rerurn true;
        for(int i=0; i<n; i++){
            dp[i][0] = true;
        }
       if(nums[0] <= k)dp[0][nums[0]] = true;
        for(int i=1; i<n; i++){
            for(int j = 1; j<=k; j++){
                 bool nontake = dp[i-1][j];
                 bool take = false;                
                 if(j>= nums[i]) take = dp[i-1][j - nums[i]];
                dp[i][j] = take | nontake;
            }
        }
       
        int mini = 1e9;
        for(int s=0; s<=totalsum/2; s++){
            if(dp[n-1][s] == true){
                int s1 = s;
                int s2 = totalsum - s;
                mini = min({mini, abs(s1-s2)});
            }    
        }
    return mini;
    }
