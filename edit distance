   
    //Tabulation + space optimisation
    int minDistance(string s, string t) {
        int n = s.length();
        int m = t.length();
        
     //   vector<vector<int>>dp(n+1, vector<int>(m+1, 0));
       vector<int>prev(m+1, 0), curr(m+1, 0);
        //BASE CASE
        for(int j=0; j<=m ; j++){
            //dp[0][j] = j;
            prev[j] = j;
        }
      //  for(int i=0; i<=n; i++){
        //    dp[i][0] = i;
        //}
        
        for(int i=1; i<=n; i++){
            //base case//for every row first column is row itself
            curr[0] = i;
            for(int j=1; j<=m; j++){
                
             if(s[i-1] == t[j-1]) curr[j] = 0 + prev[j-1];  
                //3 operations -->hypothetically insert, delete, replace.
             else curr[j] = 1 + min(prev[j], min(curr[j-1], prev[j-1])   );   
            }
            prev = curr;
        }
      return prev[m];
    }
