
    //space -optimisatoion
   int tribonacci(int n){
       if(n==0)return 0;      
       if(n==1 || n==2)return 1;
      int prev3 = 0; 
     int prev2 = 1;
     int prev =1;
     for(int i=3; i<=n; i++){
         int curr = prev + prev2 + prev3;
         prev3 = prev2;
         prev2 = prev;
         prev = curr;
     }
    return prev;
     }
    // tabulation/*
    /*int solve(int n, vector<int>&dp){
    dp[0] = 0;    
    dp[1] = 1;    
    dp[2] = 1;
        
        for(int i=3; i<=n; i++){
            dp[i] = dp[i-1] + dp[i-2] + dp[i-3];
        }
        return dp[n];
    }
    
    int tribonacci(int n){
        if(n<=1)return n;
        
      vector<int>dp(n+1, -1);     
     int ans = solve(n,dp);        
      return ans;
       }       */
           /*
    //brute---force;
    int tribonacci(int n) {
        if(n==0)return n;
        if(n<=2)return 1;    
        return tribonacci(n-1)+tribonacci(n-2)+tribonacci(n-3);
        
    }*/
